name: workflow_CI
on:
  - push
  - pull_request
defaults:
  run:
    shell: bash

env:
  SnoopCompile_coverage_ENV: true

jobs:
  Simple:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_package:
          - ./test/TestPackage1.jl
    steps:
      - uses: actions/checkout@v2
      - name: Add CompileBot and friends
        run: |
          julia --code-coverage=user -e 'using Pkg; Pkg.develop(PackageSpec(; path=pwd()));'
      - name: Install dependencies
        working-directory: ${{ matrix.test_package }}
        run: |
          julia --code-coverage=user --project -e 'using Pkg; Pkg.instantiate();'
          julia --code-coverage=user -e "using Pkg; Pkg.develop(PackageSpec(; path=pwd())); using CompileBot; CompileBot.addtestdep();"
      - name: Generating precompile files
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bot.jl")'
      - name: Running Benchmark
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bench.jl")'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info

  MultiOS:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
        test_package:
          - ./test/TestPackage2.jl
    steps:
      - uses: actions/checkout@v2
      - name: Add CompileBot and friends
        run: |
          julia --code-coverage=user -e 'using Pkg; Pkg.develop(PackageSpec(; path=pwd()));'
      - name: Install dependencies
        working-directory: ${{ matrix.test_package }}
        run: |
          julia --code-coverage=user --project -e 'using Pkg; Pkg.instantiate();'
          julia --code-coverage=user -e "using Pkg; Pkg.develop(PackageSpec(; path=pwd())); using CompileBot; CompileBot.addtestdep();"
      - name: Generating precompile files
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bot.jl")'
      - name: Running Benchmark
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bench.jl")'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info

  MultiVersion:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.0.5' # WARNING: this fails
          - '1.2'
          - '1.5.0'
        test_package:
          - ./test/TestPackage3.jl
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.version }}
      - name: Add CompileBot and friends
        run: |
          julia --code-coverage=user -e 'using Pkg; Pkg.develop(PackageSpec(; path=pwd()));'
      - name: Install dependencies
        working-directory: ${{ matrix.test_package }}
        run: |
          julia --code-coverage=user --project -e 'using Pkg; Pkg.instantiate();'
          julia --code-coverage=user -e "using Pkg; Pkg.develop(PackageSpec(; path=pwd())); using CompileBot; CompileBot.addtestdep();"
      - name: Generating precompile files
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bot.jl")'
      - name: Running Benchmark
        working-directory: ${{ matrix.test_package }}
        run: julia --code-coverage=user --project -e 'include("deps/SnoopCompile/snoop_bench.jl")'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
      - name: Upload all
        uses: actions/upload-artifact@v2.0.1
        with:
          path: ${{ matrix.test_package }}

  Create_PR:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    needs: MultiVersion
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_package:
          - ./test/TestPackage3.jl
    steps:
      - uses: actions/checkout@v2
      - name: Download all
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: ${{ matrix.test_package }}/artifact
      - run: |
          julia --code-coverage=user -e 'using Pkg; Pkg.develop(PackageSpec(; path=pwd()));'
      - name: CompileBot postprocess
        run: |
          julia --code-coverage=user -e 'using CompileBot; CompileBot.postprocess();'
        working-directory: ${{ matrix.test_package }}

      # BUG coverage is not merged!
      # - uses: julia-actions/julia-processcoverage@v1
      # - uses: codecov/codecov-action@v3
      #   with:
      #     file: lcov.info

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update precompile_*.jl file
          title: "Test: Update precompiles"
          labels: Test_SnoopCompile
          branch: "Test_SnoopCompile_AutoPR_${{ github.ref }}"

  Skip:
    if: "contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Skip CI ðŸš«
        run: echo skip ci
